Architektury výpočetních systému (AVS 2019)
Projekt č. 1 (ANN)
Login: xharmi00


U každého kroku proveďte měření výpočtu pro dataset dostupný na
https://www.fit.vutbr.cz/~ibordovsky/avs/datasets/bigDataset.h5. Správnost
výpočtu můžete porovnat pomocí python 3 skriptu "Scripts/compareOutputs.py"
s referenčním řešením. Pro bigDataset je dostupný na
https://www.fit.vutbr.cz/~ibordovsky/avs/datasets/bigRefOutput.h5.


Krok 0: základní implementace
===================================
Celkový čas [s]:                        194.114
Výkon skalárních operací [MFLOPS]:      36.4579
Výkon vektorových operací [MFLOPS]:     1132.37
L1 miss [%]:                            86
L2 miss [%]:                            99.9
L3 miss [%]:                            0.00729

Které PAPI_EVENTS jste použili pro získání počtu výpadků v paměti?
HW countery pro L1: PAPI_L1_DCM, PAPI_LD_INS, PAPI_SR_INS
HW countery pro L2: PAPI_L2_DCM, PAPI_L2_DCA
HW countery pro L3: PAPI_L3_TCM, PAPI_L3_TCA


Krok 1: vektorizace funkcí
===================================
Celkový čas [s]:                        89.8714
Výkon skalárních operací [MFLOPS]:      0.127486
Výkon vektorových operací [MFLOPS]:     2403.41
L1 miss [%]:                            27.4
L2 miss [%]:                            99.7
L3 miss [%]:                            0.0232

Jaké pragmy bylo potřeba přidat?
- Bylo potřeba přidat nad cyklus ve funkci 'evaluateLayer' v souboru 'main.cpp'
'#pragma omp simd'. Dále bylo potřeba přidat nad deklaraci funkce 'evalNeuron'
v souboru 'neuron.h' '#pragma omp declare simd' s patřičnými dovětky.

Které dovětky k pragmám jste použili a jaký měly vliv na kompilátorem
generované funkce? (main.cpp.optrpt/neuron.cpp.optrpt)
- U '#pragma omp declare simd' jsem použil dovětky 'simdlen(8)',
linear(neuronId:1) a uniform(inputSize, neuronCount, input, weight). Tyto
dovětky měly pozitivní vliv na výkon. Cena s vektorizací se snižuje
a potenciální zrychlení se zvyšuje.


Krok 2: přístupy do paměti
===================================
a) S dovětky
(Sepište všechny použité dovětky): uniform(inputSize, input),
linear(weight:784), linear(weight:512)

Celkový čas [s]:                        36.5162
Výkon skalárních operací [MFLOPS]:      0.38841
Výkon vektorových operací [MFLOPS]:     5881.65
L1 miss [%]:                            5.08
L2 miss [%]:                            14.1
L3 miss [%]:                            0.0538

b) Bez dovětků
Některé dovětky mají negativní dopad na výkon, přestože kompilátor tvrdí opak.
Které?
- uniform(inputSize, input), linear(weight:784), linear(weight:512)

Celkový čas [s]:                        22.8715
Výkon skalárních operací [MFLOPS]:      176.393
Výkon vektorových operací [MFLOPS]:     14728.2
L1 miss [%]:                            15.6
L2 miss [%]:                            53.1
L3 miss [%]:                            0.00547

Proč mají dovětky negativní efekt na výkon?
(neklasifikovaná odpověď, můžete vynechat, ale může vynést přiklonění k bodu
u věcí, které jsou na hraně :-))
-


Krok 3.1: přesun #pragma omp simd
===================================
Celkový čas [s]:                        ??
Výkon skalárních operací [MFLOPS]:      ??
Výkon vektorových operací [MFLOPS]:     ??
L1 miss [%]:                            ??
L2 miss [%]:                            ??
L3 miss [%]:                            ??

Jaký dovětek je potřeba přidat?
-

Krok 3.2: vykonání po vrstvách místo po obrázcích
===================================
Celkový čas [s]:                        ??
Výkon skalárních operací [MFLOPS]:      ??
Výkon vektorových operací [MFLOPS]:     ??
L1 miss [%]:                            ??
L2 miss [%]:                            ??
L3 miss [%]:                            ??

Popište, jaký dopad na výkon mají výpadky v cache.
-


Krok 4: režie funkcí, zarovnání paměti
===================================
Celkový čas [s]:                        ??
Výkon skalárních operací [MFLOPS]:      ??
Výkon vektorových operací [MFLOPS]:     ??
L1 miss [%]:                            ??
L2 miss [%]:                            ??
L3 miss [%]:                            ??

Proč není zrychlení již výrazné? Na jaké typy problémů cílí tyto optimalizace?
-
